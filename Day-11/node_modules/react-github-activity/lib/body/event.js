'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var Event = (function (_Component) {
  _inherits(Event, _Component);

  function Event() {
    _classCallCheck(this, Event);

    _get(Object.getPrototypeOf(Event.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Event, [{
    key: 'renderTypes',
    value: function renderTypes(_ref) {
      var type = _ref.type;
      var _ref$payload = _ref.payload;
      var action = _ref$payload.action;
      var comment = _ref$payload.comment;

      var icon = undefined;
      var actionType = undefined;
      var actionUrl = false;
      if (type === 'WatchEvent') {
        actionType = 'starred';
        icon = "octicon octicon-star dashboard-event-icon";
      } else if (type === 'PushEvent') {
        actionType = 'pushed';
        icon = "octicon octicon-git-commit dashboard-event-icon";
      } else if (type === 'IssuesEvent') {
        if (action === 'closed') {
          actionType = action;
          icon = 'octicon octicon-issue-closed dashboard-event-icon';
        } else if (action === 'opened') {
          actionType = action;
          icon = 'octicon octicon-issue-opened dashboard-event-icon';
        } else if (action === 'commented') {
          actionType = 'commented on';
          icon = 'octicon octicon-comment-discussion dashboard-event-icon';
        }
      } else if (type === 'IssueCommentEvent') {
        icon = 'octicon octicon-comment-discussion dashboard-event-icon';
        actionType = 'commented on';
        actionUrl = comment['html_url'];
      }
      return { icon: icon, actionType: actionType, actionUrl: actionUrl };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props$ghEvent = this.props.ghEvent;
      var login = _props$ghEvent.actor.login;
      var name = _props$ghEvent.repo.name;
      var created_at = _props$ghEvent.created_at;

      var url = 'https://github.com/' + name;

      var _renderTypes = this.renderTypes(this.props.ghEvent);

      var icon = _renderTypes.icon;
      var actionType = _renderTypes.actionType;
      var actionUrl = _renderTypes.actionUrl;

      return _react2['default'].createElement(
        'div',
        { style: this.props.styles.githubEvent },
        _react2['default'].createElement('span', { style: this.props.styles.githubEventOcticon, className: icon }),
        _react2['default'].createElement(
          'div',
          { style: this.props.styles.githubTitle },
          _react2['default'].createElement(
            'a',
            null,
            login
          ),
          ' ',
          " ",
          actionType,
          " ",
          _react2['default'].createElement(
            'a',
            { style: this.props.styles.ghUrl, href: actionUrl ? actionUrl : url },
            ' ',
            name,
            ' '
          )
        ),
        _react2['default'].createElement(
          'div',
          { style: this.props.styles.githubTime },
          (0, _moment2['default'])(created_at).fromNow()
        )
      );
    }
  }]);

  return Event;
})(_react.Component);

exports['default'] = Event;
module.exports = exports['default'];